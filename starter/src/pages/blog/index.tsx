import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { useState } from "react";
import { BlogProps } from "../../properties/props";

interface BlogItemProps {
  blogs: BlogProps[];
}

export const getServerSideProps: GetServerSideProps<BlogItemProps> = async (
  context
) => {
  const category = context.query.category as string;
  const q = context.query.q as string;

  let url = "http://localhost:5001/blogs?";

  if (category && q) {
    url += `category=${category}&q=${q}`;
  } else if (category) {
    url += `category=${category}`;
  } else if (q) {
    url += `q=${q}`;
  }

  const response = await fetch(url);
  const data = await response.json();

  return {
    props: {
      blogs: data,
    },
  };
};

const Blog: NextPage<BlogItemProps> = ({ blogs }) => {
  const router = useRouter();
  const { category, q } = router.query;
  const [searchQuery, setSearchQuery] = useState<string>("");

  const handleCategoryFilter = (category: string) => {
    const query = {
      ...(category && { category }),
      ...(q && { q }),
    };

    router.push({
      pathname: "/blog",
      query,
    });
  };

  const handleSearch = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const formData = new FormData(e.target as HTMLFormElement);
    const searchQuery = formData.get("search-blog") as string;

    const query = {
      ...(category && { category }),
      ...(searchQuery && { q: searchQuery }),
    };

    router.push({
      pathname: "/blog",
      query,
    });
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Blog" />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}
                {blogs.length > 0 ? (
                  blogs.map((blog) => <BlogItem key={blog.id} blog={blog} />)
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={handleSearch}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search-blog"
                    placeholder="Search"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => handleCategoryFilter("fashion")}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => handleCategoryFilter("beauty")}
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => handleCategoryFilter("streetstyle")}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => handleCategoryFilter("lifestyle")}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                        onClick={() => handleCategoryFilter("diy")}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;
