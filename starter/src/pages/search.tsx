import type { NextPage, GetServerSideProps } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { BlogProps, ProductProps } from "../properties/props";
import { useRouter } from "next/router";

interface SearchProps {
  blogs: BlogProps[];
  products: ProductProps[];
}

export const getServerSideProps: GetServerSideProps<SearchProps> = async (
  context
) => {
  const q = context.query.q as string;

  const blogsFetch = await fetch(`http://localhost:5001/blogs?q=${q}`);
  const blogs = await blogsFetch.json();

  const productsFetch = await fetch(
    `http://localhost:5001/products?q=${q}`
  );
  const products = await productsFetch.json();

  return {
    props: {
      blogs,
      products,
    },
  };
};

const Search: NextPage<SearchProps> = ({ blogs, products }) => {
  const router = useRouter();
  const q = router.query.q as string;

  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={`Search results for "${q}"`} />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {/* blogs */}
          {blogs.length > 0 && (
            <>
              <h2 className="mb-5">Blogs</h2>
              <div className="row isotope-grid">
                {blogs.map((blog) => (
                  <div key={blog.id} className="col-4">
                    <BlogItem blog={blog} />
                  </div>
                ))}
              </div>
            </>
          )}

          {/* products */}
          {products.length > 0 && (
            <>
              <h2 className="mb-5">Products</h2>
              <div className="row isotope-grid">
                {products.map((product) => (
                  <div key={product.id} className="col-4">
                    <ProductItem product={product} />
                  </div>
                ))}
              </div>
            </>
          )}

          {/* no items */}
          {blogs.length === 0 && products.length === 0 && (
            <div>
              <p>There are no items with your search.</p>
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default Search;
